// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var FALLBACK_CHROMEDRIVER_VERSION, getArchitecture, getLatestVersion, request;
  FALLBACK_CHROMEDRIVER_VERSION = '2.10';
  request = require('request');
  getArchitecture = function () {
    var bitness, platform;
    platform = process.platform;
    if (!(platform === 'linux' || platform === 'darwin' || platform === 'win32'))
      throw new Error('Unsupported platform ' + platform + '. Only linux, darwin, and win32 are supported.');
    bitness = process.arch.substr(1);
    if (platform === 'darwin') {
      platform = 'mac';
      bitness = '32';
    }
    if (platform === 'win32') {
      platform = 'win';
      bitness = '32';
    }
    return {
      platform: platform,
      bitness: bitness
    };
  };
  getLatestVersion = function (callback) {
    return request('http://chromedriver.storage.googleapis.com/LATEST_RELEASE', function (error, response, body) {
      if (null != error)
        return callback(error);
      return callback(null, body);
    });
  };
  module.exports = function (callback) {
    return getLatestVersion(function (error, version) {
      var bitness, cache$, downloadUrl, platform;
      if (null != error) {
        version = FALLBACK_CHROMEDRIVER_VERSION;
        console.log('[testium] Unable to determine latest version of selenium chromedriver; using ' + version);
        console.error(error.stack || error);
      }
      cache$ = getArchitecture();
      platform = cache$.platform;
      bitness = cache$.bitness;
      downloadUrl = 'https://chromedriver.storage.googleapis.com/' + version + '/chromedriver_' + platform + bitness + '.zip';
      return callback(null, {
        downloadUrl: downloadUrl,
        version: version
      });
    });
  };
}.call(this);
